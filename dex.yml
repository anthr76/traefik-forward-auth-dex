apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dex
  name: dex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      serviceAccountName: dex
      containers:
      - name: dex
        image: quay.io/dexidp/dex:latest
        command: [/usr/local/bin/dex, serve, /etc/dex/cfg/config.yaml]
        ports:
        - containerPort: 5556
        volumeMounts:
        - name: config
          mountPath: /etc/dex/cfg
      volumes:
      - name: config
        configMap:
          name: dex
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: dex
data:
  config.yaml: |
    issuer: https://dex:5556/

    storage:
      type: kubernetes
      config:
        inCluster: true

    web:
      http: 0.0.0.0:5556

    connectors:
    - type: github
      id: github
      name: GitHub
      config:
        clientID: xxxxxx
        clientSecret: xxxxx
        redirectURI: https://dex:5556/callback
        orgs:
        - name: poise

    oauth2:
      skipApprovalScreen: true

    staticClients:
    - name: Traefik Forward Auth
      id: forward-auth
      secret: 6bbc3f2a6d55a3917e068dff5b07a476
      redirectURIs:
      - https://auth.lvh.me/_oauth
---
apiVersion: v1
kind: Service
metadata:
  name: dex
spec:
  type: LoadBalancer
  ports:
  - name: dex
    port: 5556
  selector:
    app: dex
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dex
spec:
  rules:
  - host: dex.lvh.me
    http:
      paths:
      - path: /
        backend:
          serviceName: dex
          servicePort: 5556
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dex
  name: dex
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: dex
rules:
- apiGroups: ["dex.coreos.com"] # API group created by dex
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create"] # To manage its own resources, dex must be able to create customresourcedefinitions
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex           # Service account assigned to the dex pod, created above
  namespace: default  # The namespace dex is running in
